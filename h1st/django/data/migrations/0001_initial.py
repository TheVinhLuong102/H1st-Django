# Generated by Django 3.1.4 on 2020-12-16 07:36


import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone

import model_utils.fields

import json.decoder
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = ('contenttypes', '0002_remove_content_type_name'),

    operations = [
        migrations.CreateModel(
            name='DataSchema',

            fields=[
                ('uuid',
                 models.UUIDField(
                    db_index=True,
                    default=uuid.uuid4,
                    editable=False,
                    help_text='UUID',
                    primary_key=True,
                    serialize=False,
                    unique=True,
                    verbose_name='UUID')),

                ('name',
                 models.CharField(
                    db_index=True,
                    default=None,
                    help_text='Data Schema Unique Name',
                    max_length=255,
                    unique=True,
                    verbose_name='Data Schema Unique Name')),

                ('specs',
                 models.JSONField(
                    decoder=json.decoder.JSONDecoder,
                    default=None,
                    encoder=django.core.serializers.json.DjangoJSONEncoder,
                    help_text='Data Schema Specifications',
                    verbose_name='Data Schema Specifications')),

                ('created',
                 model_utils.fields.AutoCreatedField(
                    default=django.utils.timezone.now,
                    editable=False,
                    verbose_name='created')),
                ('modified',
                 model_utils.fields.AutoLastModifiedField(
                    default=django.utils.timezone.now,
                    editable=False,
                    verbose_name='modified')),

                ('polymorphic_ctype',
                 models.ForeignKey(
                    editable=False,
                    null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='polymorphic_h1stdata.dataschema_set+',
                    to='contenttypes.contenttype'))
            ],

            options={
                'verbose_name': 'Data Schema',
                'verbose_name_plural': 'Data Schemas',
                'db_table': 'H1stData_DataSchema',
                'ordering': ('name',),
                'permissions': (),
                'get_latest_by': 'modified',
                'abstract': False,
                'managed': True,
                'proxy': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
                'select_on_save': False,
                'default_related_name': 'data_schemas',
                'required_db_features': (),
                'base_manager_name': 'objects',
                'default_manager_name': 'objects'
            }
        ),

        migrations.CreateModel(
            name='DataSet',

            fields=[
                ('uuid',
                 models.UUIDField(
                    db_index=True,
                    default=uuid.uuid4,
                    editable=False,
                    help_text='UUID',
                    primary_key=True,
                    serialize=False,
                    unique=True,
                    verbose_name='UUID')),

                ('schema',
                 models.ForeignKey(
                    blank=True,
                    default=None,
                    help_text='Data Set Schema',
                    null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    related_name='data_sets',
                    related_query_name='data_set',
                    to='H1stData.dataschema',
                    verbose_name='Data Set Schema')),

                ('created',
                 model_utils.fields.AutoCreatedField(
                    default=django.utils.timezone.now,
                    editable=False,
                    verbose_name='created')),
                ('modified',
                 model_utils.fields.AutoLastModifiedField(
                    default=django.utils.timezone.now,
                    editable=False,
                    verbose_name='modified')),

                ('polymorphic_ctype',
                 models.ForeignKey(
                    editable=False,
                    null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='polymorphic_h1stdata.dataset_set+',
                    to='contenttypes.contenttype'))
            ],

            options={
                'verbose_name': 'Data Set',
                'verbose_name_plural': 'Data Sets',
                'db_table': 'H1stData_DataSet',
                'ordering': ('-modified',),
                'permissions': (),
                'get_latest_by': 'modified',
                'abstract': False,
                'managed': True,
                'proxy': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
                'select_on_save': False,
                'default_related_name': 'data_sets',
                'required_db_features': (),
                'base_manager_name': 'objects',
                'default_manager_name': 'objects'
            }
        ),

        migrations.CreateModel(
            name='JSONDataSet',

            fields=[
                ('dataset_ptr',
                 models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    related_name='json_data_sets',
                    serialize=False,
                    to='H1stData.dataset')),

                ('json',
                 models.JSONField(
                    blank=True,
                    decoder=json.decoder.JSONDecoder,
                    default=None,
                    encoder=django.core.serializers.json.DjangoJSONEncoder,
                    help_text='JSON Data Content',
                    null=True,
                    verbose_name='JSON Data Content'))
            ],

            options={
                'verbose_name': 'JSON Data Set',
                'verbose_name_plural': 'JSON Data Sets',
                'db_table': 'H1stData_JSONDataSet',
                'abstract': False,
                'default_related_name': 'json_data_sets',
                'base_manager_name': 'objects'
            },

            bases=('H1stData.dataset',)
        ),

        migrations.CreateModel(
            name='NamedJSONDataSet',

            fields=[
                ('jsondataset_ptr',
                 models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    related_name='named_json_data_sets',
                    serialize=False,
                    to='H1stData.jsondataset')),

                ('name',
                 models.CharField(
                    db_index=True,
                    default=None,
                    help_text='Data Set Unique Name',
                    max_length=255,
                    unique=True,
                    verbose_name='Data Set Unique Name'))
            ],

            options={
                'verbose_name': 'Named JSON Data Set',
                'verbose_name_plural': 'Named JSON Data Sets',
                'db_table': 'H1stData_NamedJSONDataSet',
                'ordering': ('name',),
                'abstract': False,
                'default_related_name': 'named_json_data_sets',
                'base_manager_name': 'objects'
            },

            bases=('H1stData.jsondataset',
                   models.Model)
        ),

        migrations.CreateModel(
            name='ParquetDataSet',

            fields=[
                ('dataset_ptr',
                 models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    related_name='parquet_data_sets',
                    serialize=False,
                    to='H1stData.dataset')),

                ('path',
                 models.CharField(
                    db_index=True,
                    default=None,
                    help_text='Data Set Path/URL',
                    max_length=255,
                    verbose_name='Data Set Path/URL')),

                ('is_dir',
                 models.BooleanField(
                    db_index=True,
                    default=False,
                    help_text='Data Set Path/URL is Directory?',
                    verbose_name='Data Set Path/URL is Directory?'))
            ],

            options={
                'verbose_name': 'Parquet Data Set',
                'verbose_name_plural': 'Parquet Data Sets',
                'db_table': 'H1stData_ParquetDataSet',
                'abstract': False,
                'default_related_name': 'parquet_data_sets',
                'base_manager_name': 'objects'
            },

            bases=('H1stData.dataset',)
        ),

        migrations.CreateModel(
            name='NamedParquetDataSet',

            fields=[
                ('parquetdataset_ptr',
                 models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    related_name='named_parquet_data_sets',
                    serialize=False,
                    to='H1stData.parquetdataset')),

                ('name',
                 models.CharField(
                    db_index=True,
                    default=None,
                    help_text='Data Set Unique Name',
                    max_length=255,
                    unique=True,
                    verbose_name='Data Set Unique Name'))
            ],

            options={
                'verbose_name': 'Named Parquet Data Set',
                'verbose_name_plural': 'Named Parquet Data Sets',
                'db_table': 'H1stData_NamedParquetDataSet',
                'ordering': ('name',),
                'abstract': False,
                'default_related_name': 'named_parquet_data_sets',
                'base_manager_name': 'objects'
            },

            bases=('H1stData.parquetdataset',
                   models.Model)
        ),

        migrations.CreateModel(
            name='TFRecordDataSet',

            fields=[
                ('dataset_ptr',
                 models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    related_name='tfrecord_data_sets',
                    serialize=False,
                    to='H1stData.dataset')),

                ('path',
                 models.CharField(
                    db_index=True,
                    default=None,
                    help_text='Data Set Path/URL',
                    max_length=255,
                    verbose_name='Data Set Path/URL')),

                ('is_dir',
                 models.BooleanField(
                    db_index=True,
                    default=False,
                    help_text='Data Set Path/URL is Directory?',
                    verbose_name='Data Set Path/URL is Directory?'))
            ],

            options={
                'verbose_name': 'TFRecord Data Set',
                'verbose_name_plural': 'TFRecord Data Sets',
                'db_table': 'H1stData_TFRecordDataSet',
                'abstract': False,
                'default_related_name': 'tfrecord_data_sets',
                'base_manager_name': 'objects'
            },

            bases=('H1stData.dataset',)
        ),

        migrations.CreateModel(
            name='NamedTFRecordDataSet',

            fields=[
                ('tfrecorddataset_ptr',
                 models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    related_name='named_tfrecord_data_sets',
                    serialize=False,
                    to='H1stData.tfrecorddataset')),

                ('name',
                 models.CharField(
                    db_index=True,
                    default=None,
                    help_text='Data Set Unique Name',
                    max_length=255,
                    unique=True,
                    verbose_name='Data Set Unique Name'))
            ],

            options={
                'verbose_name': 'Named TFRecord Data Set',
                'verbose_name_plural': 'Named TFRecord Data Sets',
                'db_table': 'H1stData_NamedTFRecordDataSet',
                'ordering': ('name',),
                'abstract': False,
                'default_related_name': 'named_tfrecord_data_sets',
                'base_manager_name': 'objects'
            },

            bases=('H1stData.tfrecorddataset',
                   models.Model)
        )
    ]
